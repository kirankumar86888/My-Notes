Date:30/08/2023
Dockers is containerzation software by using docker we will create conatiners for our application
containerzation:
is used to package all the softwares and code in one container for execution
container will take care of everything which is required to run our application
we can run the containers in multiple machines
--->by using docker we will create images for our applications
--->we can create docker container and we can execute it 
--->docker ia platform is for packaging,deploying and run application
--->GO(Google off) language used to develop a docker sebastian paul


docker info--->provide client and server info
docker images--->display the list of docker images
docker container---->display the containers
docker ps(process)---->running container information
doker ps -a----->to show all containers (topped and running)
docker registry(docker HUB)--->is the place which is used to store docker images for future purpose
docker pull imagename--->download the image
docker run -it(interactive terminal) imageid/image name----> to create conatiner
docker run -it(interactive terminal) --name myconatinername  imageid/imagename-----> to assign the name for conatiner
ctl+p+q----> to run in background
usermod -aG dockergroup
docker rm conatiner id-----> to remove container stopped container
docker stop container id---->to stop the container
docker rm -f conatinerid--->to remove conatiner forcefully
docker ps -a | grep Exited ---->to show the only stopped conatiners
docker rm -f $(docker ps -aq)----> to delete all the containers
docker image save ubuntu:latest -o (output format) myubuntu.tar
docker rmi imagename--->to remove image
docker image load -i(input) myubuntu.tar----> to load image from .tar
docker image import url----->to import (clone)
dangling images---->unstaged/un tagged/ docker some images from intenet and we cant create containers
docker system prune----> remove the unsued images
docker exec -it conatiner id /bin/bash---> to login conatiner
docker conatiner commit -m(message) "my ownimage" conatiner id imagename----> to create image from conatiner
docker run -it -d(detach mode) -p(port mapping) --name conatinername image name  ----> to create the conatiner and run in background at the creation time of container
docker run -d -p 8080 --name usercontainername imagename---->with port number

Date:02/09/2023
Docker File:
is a text document that conatins commands and that are use to assemble an image
--->its conatins instructions(conditions) to build docker image
--->we will use DSL(Domain Specific language) Keywords
--->engine will process docker file instruction from bottom to line
Docker file---->D Should be capital letter(while file creating docker file)

		       FROM                           (Docker build)		  (Docker run)
Docker hub(base image)------>Docker file(Key words)----------------->docker image---------------->docker container

KeyWords:
Every keywords perform with Capital
1.FROM: is used to represent base image to create our own image
2.MAINTAINER:is used to specify the author file information
3.CMD:is used to specifies the initial command(linux commands) that should be executed when the container starts(over write the command to previous commands)
4.RUN:used for running linux commands within the container (install s/w package inside a container)
5.ADD/COPY:ADD command is used to copy files from hosted machine to container and download the package from internet(its do UNTAR Also)
COPY is used to copy files from hosted machine to container only(without untar)
6.USER:is used the specify the default users list
7.WORKDIR:is used the specify the default working directory inside container
8.EXPOSE:used to specify the internal port of the container
9.ENTRYPOINT:will instruct while executin when ever creat or run the container
10.ENV:is used to set the environment variables ENV <KEY> VALUE


docker build -t(tagging) ownimagename .(docker file path (root path))  ---->to create image from docker file
docker run -it myownimage------> to create container 

Date:04/09/2023

Muiltistage Doker file:
Networks:
bridge------>assign the ip adddress for container
host------> it wont assign ip for container
none------>no network assign

Drivers:
bridge
host
none
overlay------->orchestration services docker swarm
macvlan------->ip address assign it makes it as physical container

docker network create codeingrad------>to create network
docker networks ls------>to check the total networks
docker network inspect codeingrad------>to show the detail info of particular n/w
docker network rm codeingrad----->remove network


Volumes:
Stateful containers vs stateless containers
docker volumes are used to store container data permanently and its prefered mechanism 
Stateless containers:
containers will not remember the data which got generated bythat container
when we re-created new container we will looose old data those containers are called stateless containers
by default docker containers are stateless containers
to make stateless containers as stateful containers with using volumes

Applications we are executing as docker containers
once container is removed then we will loose the data

Volume Types:
1.Anonymous Volumes----->without name for volumes
  Volume:
no name:/var/lib/xyz
2.Named Volumes--------->with name for volumes while creating volume

volume:
app_data:/var/lib/xyz----->app-data is voulme name   var/lib/xyz is path for volume


3.Bind mount Volume----->storing on host machine


------>volumes can be created through command lines and Dockerfile

docker volume ls----->to dispaly the all volumes
docker volume create volume-name -----> to create volume
docker volume rm volume-name----->to delete volume

Docker Compose:

monolythic  vs   micro-service
Docker compose is a tool which is used to manage multi container based application 
--->using YML files we create docker compose 
---->YML file should have all the information related to our container creation and componenets are like version(by default 3rd),services,networks,volumes
--->docker compose default file name is "docker-compose.yml"
---->docker compose up---->to run the compose file


Dokcer Swarm:
It is an orchestration platform and used to manage docker containers
creating/updating/scalu down/up/remove----activities will perform
cluster---->combination of master and work nodes
master node---->manage the worker nod and assign the tasks to worker nodes
Worker node---->will perform the task based on master node instruction
based on token communication will be establish b/w master node and worker nodes


















