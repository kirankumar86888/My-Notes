Docker Volumes
==============
	There are two types of containers
	1.Stateless Containers
	2.Stateful Containers

1.StateLess Containers : Containers wil not remember the data which got generated by that container, when we recreate the new container we will loose the previous/old data
	->by defualt the docker containers are stateless container

2.Stateful Container :Here the docker containers are stateful(will not loose the container data when we recreate the container) we use docker docker volumes


Docker Volume :
==============

For Eg : In docker engine(server) we have two containers 1.application container and DB container

--> Here the applications are executed as docker containers
--> By default docker containers are stateless
--> Once the container is removed then we will loose our data
--> In realtime we need to use docker volumes and docker networks
--> Here application will store the data in the database container
--> If we delete application container/databse container , but data still exists becuase of volumes
--> Docker volumes are used to store the data permentatly
--> Docker volumes are preferred mechanisms for persisting data generated by and used by docker containers
-->Volumes Can be shared from one container to other container
--->Volumes can be very high performances
--> Volumes are of three types
	
	1.Anonymous volumes : The volumes which are created doesnt have any name(will not assign the name and just the define the path)
	Eg:VOLUME
	   /var/lib/xyz
	2.Named Volumes : The volumes which are created has the name (need to assign the name while we creating the container).Here app_data is the named the volume
	Eg:VOLUME :
	   app_data :/var/lib/xyz
	3.Bind Mountain Volumes :the volumes which are created in the Host OS.Here we can create we can one directory, we can map our container to Bind Moutain Volume 

-->Docker volumes can be creted in two ways 1.Through Docker file
					    2.Through docker commands


1.Through docker commands

	docker volume ls ( to display the ls of docker volumes)
	docker volume create myvolume ( to creatre the docker volume)
	docker volume rm myvolume(to delete the docker volume)
	docker volume inspect myvolume( inspect     Display detailed information on one or more volumes like crearedat,driver:local,name,scope)
	docker volume prune(removes all the local volumes which are not used atleast by one container)
	docker -v <source, destination...>
	docker --mount (both commands are usied for bind directory from host to container)
	docker run -d --mount source=abhishek, target=/app <imagename>



Log File - gives the info of who ever performed the commands (like a history)(user authentication detaisls)
If container go down then logfile will be deleted
	

Bind Mounts :
============
 it allows u to bind the directory inside your container(as it the folder exists in host too)
->Means the bind the specific directory on the host to the container
->
 