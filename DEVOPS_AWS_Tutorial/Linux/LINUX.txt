LINUX:
======

OS- Interface between user and hardware components

we have diffrent OS like windows,linux,macos

Linux -It is a free and Open-source(source code available in internet) OS

	-By using C Programmimg Linux is developed
	
	-Source code is Available in internet

	- Based on our requirement we can modify the code and use

	-Mid 90's Linux is developed - by Linux torvalds

	-Linux is a Multi user OS (we can create multiple users and we can manage multiple usersby multiple groups)
	
	-Linux is a userfirendly OS and character user Interface(through commands we execute) and GUI(Graphical user Interface)

	-When compared with Windows OS Linux is more secure OS

	-And Linux is Fast/speed compared to windows
	
	-Linux Os can be used anywhere (servers,lapyops,smart watches etc)

	-We have different type of flavours in Linux(unbuntu,Fedora,CentOs,redhat etc...)

	-Shell Arctitecture contains(application,shell,kernel,hardwrare)
		->shell - It is outer layer of the unix OS
			  - read the commands given by user
			  - verify the syntax and check the corresponding command related application is avaialble or not
			  - Everything Command is good it transerfers to kernel
			  - It works as an interface beteween  kernel
			  - shell converts the command into Kernal understanding format		
		->Kernel
				- Heart/core component of the Linux Os
				- It is responsible to execute the commands
				- It is responsible to interact with hardware components
				- Memory allocations and process alocations are taken by Kernel

Eg:

Command(touch a.txt) ---->Command submitted shell ---->Valid or not(syntax verifices)
---->If it is Proper(shell interpreter(transforms understable format to kernel))---->Kernel execeute that command---->In terminal it displays the commands output


Command(touch a.txt) ---->Command submitted shell ---->Valid or not(syntax verifices)---->Error message displays 
--->Again execute the command ---->Kernel execeute that command



- change to root user -->sudo -i (Super User Do)
Normal user doesnt have all permissions(indicates with 'Dollar sign symbol') so shifting to root userr access all the permissions
yum(yellow dog Updater modifier) used in normal user- not have all permissions 
sudo(super user do) - used for root user

'yum install tree'  [installing tree package] - nornal user --It provide directory structure
now 'sudo yum install tree' (install in root user)

'sudo yum remove tree -y' (uninstall the tree)
check tree - no such file directory


--sudo  -i
---yum install tree -y

normal user

pwd - print working directory - gives the present working directory


'sudo su -'  - changes to root user (displays with '#' symbol)
'exit' - to switch into defualt or normal user


[ec2-user@ip-172-31-82-111 ~]$ sudo su
[root@ip-172-31-82-111 ec2-user]# exit
exit

'sudo su' has - displays the root user +normal user name and shift to rootuser only

[ec2-user@ip-172-31-82-111 ~]$ sudo su -
Last login: Tue Jul 11 02:32:43 UTC 2023 on pts/0
[root@ip-172-31-82-111 ~]# ^

'sudo su -' has - only root user

'uptime' - used to know the how long the system is active/connected to server

[ec2-user@ip-172-31-82-111 ~]$ uptime
 02:38:06 up 28 min,  1 user,  load average: 0.01, 0.02, 0.00

here in load average    first part  -
				second part -
				third part  - 


'hostname -i'  - displays the private IP address

[root@ip-172-31-82-111 ~]# hostname -i
172.31.82.111

'hostname' - display the private DNS name

[root@ip-172-31-82-111 ~]# hostname
ip-172-31-82-111.ec2.internal

'man hostname' - displays manual page - entire page

'who'  - displays who is connected to user
[root@ip-172-31-82-111 ~]# who
ec2-user pts/0        2023-07-11 02:11 (122.179.226.75)


[root@ip-172-31-82-111 ~]# w
 02:49:12 up 39 min,  1 user,  load average: 0.00, 0.00, 0.00
USER     TTY        LOGIN@   IDLE   JCPU   PCPU WHAT
ec2-user pts/0     02:11    0.00s  0.06s  0.02s sshd: ec2-user [priv]

'whoami' - display rightnow which user is present

[root@ip-172-31-82-111 ~]# whoami
root
[root@ip-172-31-82-111 ~]# exit
logout
[ec2-user@ip-172-31-82-111 ~]$ whoami
ec2-user


'cal' - to display the present month of calender
'cal 2023' - to display entire year calender
'cal 08 2023' -  to display the specific month 


[ec2-user@ip-172-31-82-111 ~]$ cal
      July 2023
Su Mo Tu We Th Fr Sa
                   1
 2  3  4  5  6  7  8
 9 10 11 12 13 14 15
16 17 18 19 20 21 22
23 24 25 26 27 28 29
30 31

[ec2-user@ip-172-31-82-111 ~]$ cal 10 2023
    October 2023
Su Mo Tu We Th Fr Sa
 1  2  3  4  5  6  7
 8  9 10 11 12 13 14
15 16 17 18 19 20 21
22 23 24 25 26 27 28
29 30 31

to know the public IP address the command?

to clear the screen - 'Ctrl +l'  or clear


'cal -3' :-displays previous,present anf next month calender


      June 2023             July 2023            August 2023
Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa
             1  2  3                     1         1  2  3  4  5
 4  5  6  7  8  9 10   2  3  4  5  6  7  8   6  7  8  9 10 11 12
11 12 13 14 15 16 17   9 10 11 12 13 14 15  13 14 15 16 17 18 19
18 19 20 21 22 23 24  16 17 18 19 20 21 22  20 21 22 23 24 25 26
25 26 27 28 29 30     23 24 25 26 27 28 29  27 28 29 30 31



'cal -y' :-displays entire year
'date' :- default dateinfo - today with timestamp it displays
'date "+%Y" ' - display the current year 
'date "+%m" ' - display the current month
'date "+%d" ' - display the current date
'date "+%y" ' - display the current year - last two digits

'date "+%d/%m/%Y" ' : display the date format for Eg: 12/07/2023\
'date "+%a" ' :-display the day -wordformat - with shortname - Eg:wed
'date "+%A" ' :-display the day - wordformat-with fullname - Eg:wednesday

'date "+%b" ':-display the month -wordformat - with shortname - Eg:jul
'date "+%B" ':-display the month -wordformat - with FullName - Eg:july

---> Today Requirement task :
date -- need to display in the belowe format 12/07/2023 wed
---------------------------------------------------------
[root@ip-172-31-82-111 ~]# date
Wed Jul 12 09:41:03 UTC 2023
[root@ip-172-31-82-111 ~]# date "+%Y"
2023
[root@ip-172-31-82-111 ~]# date "+%y"
23
[root@ip-172-31-82-111 ~]# date "+%M"
41
[root@ip-172-31-82-111 ~]# date "+%m"
07
[root@ip-172-31-82-111 ~]# date "+%d"
12
[root@ip-172-31-82-111 ~]# date "+%D"
07/12/23
[root@ip-172-31-82-111 ~]# date "+%d/%m/%Y"
12/07/2023
[root@ip-172-31-82-111 ~]# date "+%m/d/%Y"
07/d/2023
[root@ip-172-31-82-111 ~]# date "+%m/%d/%Y"
07/12/2023
[root@ip-172-31-82-111 ~]# date "+%a"
Wed
[root@ip-172-31-82-111 ~]# date "+%A"
Wednesday
[root@ip-172-31-82-111 ~]# date "+%b"
Jul
[root@ip-172-31-82-111 ~]# date "+%B"
July
[root@ip-172-31-82-111 ~]# date "+%d/%m/%Y %a"
12/07/2023 Wed

-----------------------------------------------------------
File Commands:-
--------------

To create a file in Linux system we have different methods
	->By using touch command
	->By using cat command
	->By using editors(vim,nano,gedit)

'touch' :- to create an emptty file or zero sized file
Eg:  touch <filename>
	touch demo.txt
'll' :- long listing - displays the files created with the permissons
'ls -ltr' :- displays total files- hidden files and created 
'ls' -  displays the list of files created

'cat' :- to create a file and can insert the data
Syntax :- 'cat ><filename>
		cat >demo.txt
file is created and u can insert the data , once the data is written
For saving the file use 'ctrl+D' 

'cat <filename>' :- to display the content of the data
Eg : cat demo.txt

'cat >> <filenmae> :-(Append the data)- to add the extra data for the same file
Eg : cat >>demo.txt

'cat -n demo.txt' :- to display the linenumbers in the file
 'cat demo.txt>newfile.txt' :- to copy the content from one to another file
'cat demo.txt demo1.txt demo2.txt > result.txt' :- to shift all the three files to single file
'more' :- to display the content of the file
'tac' :- it displays the content in reverse order


Assignment :- 

had 2 different file - f1 (had 3 lines) & f2(had 5 lines) file


Editors - to modify the content in the file

vi editor:- visual editor/vim editor 
------------------------------------
-> it is installed in every unix system
-> create a new file/ or created file we can modify the data of existing files
-> In this we 3 types of modes
	1.Command Mode :- Defualt mode
	2.Insert mode  :- i
	3.Save and exit mode
		press escape button :wq
		:w save file data
		:q quit editor
		:w! forcebally save
		:q! forcebally quit
		:wq! forcebally save and quit
		:set number - to display the number in the file
		:set nonumber - to not to display the number

Not in insert mode
sfift+g : go to bottom of the page
shift+h:  go to top of the page
shift+a : got to end of the line and you will insert mode
shift+v : to select the lines
shift+p : got to up and paste the content
shift +o : cursot above line provide space 

'yy' - Copy the lines(Yanking)
'4yy' - It will copy  4 number of lines 
'p':- paste the content
'wc' :- word count command - lines,words,characters
	wc <filename>
'wc -l filename' :- Count the number of lines in file
'wc -w filename' :- Count the number of word in file
'wc -c filename' :- Count the number of character in file
'wc -lwc filename' :- lines,words,characters
':s/<searchword> : It is acse sensitive - used for search and highlight
':noh' - no highlight 
 ':%s/linux/DevOps/g - replaceing the linux with DeVOps, g for global
':%s/linux/DevOps/gc' -replaceing the linux with DeVOps, g for global and c for confirmation
'o' : give the one line space below the cursor position
'dd' : to delete one line
'3dd' : 3 lines will be deleted
'cc' : to delete the line and switch to insert mode
'd$' :from cursor to end of the line to remove the data
'dw' : to delete the particular word
'3dw' : to delete the 3 words
'x' : to delete the single character where the cursor blinks in forward direction
'X' : to delete the single character where the cursor blinks in backward direction

Cursor navigation Commands:
------------------------
'k' : top arrow - the cursor shift towards up
'j' : down arrow - the cursor shift towards down
'l' : right arrow - the cursor shift towards left
'h' : left arrow - the cursor shift towards right

Create a file has 10 line statements
3 rd line to 7th position  - copy and paste

head - to display the top 10 commands]
tail - to display the last 10 commands
tail sample txt - display last 10 lines
tail -n +4 sample.txt - display 4th line to last
tail -c 100 sample.txt - display the filecontent 100 bytes feom bottom of the file
head -n 3 sample.txt
head -3 sample.txt
head -n -3 sample.txt


'grep' command- Global reqgular expression pattern
		  :-Globally search regular expression and print
		  :-Global regular expression parser
	- to search the given pattern in the single or multiple file

'grep -i "sai" test.txt - display sai names in the file by ignoring the case sensitive

'grep -n "Sai" test.txt - display sai name with number 
'grep -n -i "sai" test.txt - display sai name with number with ignore case
'grep -c "hari" test.txt - displays the count of the name (how many it repeats)
'grep -v "sai" test.txt ' - display the lines does not match with given pattern
'grep '^m' test.txt -displays the name starts with m
'grep 'a$' test.txt - displays the name end with a

'cat /etc/passwd'
'grep root /etc/passwd' - it will search that particular info regarding 'root
'grep ec2user /etc/passwd 
'grep "^[[:alnum:]]" test.txt  - displays all the alphanumeric not calculating the space before the word
'grep "^[[:alpha:]]" test.txt 
'grep "^[[:blank:]]" test.txt - display all the start blank line

task :
emp.txt
5 records
eno 
ename
esal
addr
dept  -admin
gender


Display all the employee name belongs to admin dept
All employees admin and sales dept display

sed command : stream editor

sed command used to perform, search,find,replace,insert (a) and delete (d)operations
	By using sed command we can use without opening the file Also
	to print the required lines

sed -n '1p' v1.txt - displays the first line
sed -n '$p' v1.txt - displays the last line


sed -n '1,3'p v1,txt - dis[lays 1st to 3rd line
sed -n '5,$'p v1.txt - displays 5th to lat line
sed -n -e '5,8p' -e '15,21p' - displays the 5th to 8th line and 15th to 21st line

sed 's/team/TEAM/g' v2.txt - to replace team to TEAM

sed '8,12 s/team/TEAM/g' v2.txt - to replace team keyword in between the lines
sed '1a\hi everyone'  v2.txt - to add the hi everone one in first line
sed '1d' v2.txt - to delete first line 

User command :
we can create multiple users and 
we can manage  users by creating user groups
We can add users to group and we can remove users from group
For evry user we have home path
We can create user accounts in Linux 
id - full info abou user accounts
cat /etc/passwd - display user list
gtent passwd - display user list

sudo useradd Madhu - to create the user 
and check cat /etc/passwd
Madhu:x:1001:1001::/home/Madhu:/bin/bash

create a password for Madhu user
'sudo passwd Madhu'- to set password for user

vcreate one more user =Milky
'su - Madhu'- to login into Madhu user

'sudo userdel Milky' - to remove the user

'cat /etc/group ' to display the group list
'sudo groupadd dbteam' - to create the group
'sudo usermod -aG dbteam Madhu' - add the user in group (arguementGroup)
'sudo gpasswd -d Madhu dbteam'- to remove the user from group
now check id Madhu - Madhu user not prsent in dbteam
'sudo groupdel dbteam' - to remove entire the group
'cat /etc/group'
getent passwd
File Permissions:
----------------

umask - 0022 - last 3 bits need to consider - user mask - it hide the permissions
vi /etc/profile - we can change the umask value

user/owner-Group-Other

here we octal nunber system - base value- 8 allowed digits 
0 -000- No permissions
1-001 - exceutable permission
2- 010 - write permmission
3-011 - write and execute permmision
4-100 - read
5-101 - read and exciute
6 -110 - read and write
7-111 - read,write and execute

read -   r - 4
write -  w - 2
exceute- x - 1
no permission - '-'- 0

765 - rwx-rw-rx



022-
default permissions for file - 
	666-umask value
	022
	----
	644 ->rw- r-- r--
default permissions for directory
	777-umask value
	022
	---
	755 ->rwx  r-x   r-x - 
	      user group other
		u    g    o

mkdir - create a directory
mkdir mydir 

to change default permissions we use change mode -'chmod'

have 2 methods
1.Symbolic/Text method
2.Numeric method
ymbolic/Text method:

created a file a.txt and add the executable permmission
 ->chmod u+x a.txt ->ll
 ->chmod go+w a.txt - adding group,others -write permission
-> to delete the permissions use '-'
	chmod go-w
->touch c.txt
  chmod ug+w c.txt

file color changes when we perform executable pemission
numeric method:
	chmod 777 a1.txt - all permission to that file
	chmod 465 a1.txt - r--rw-r-x
	chmod 000 a1.txt - no permissions to file
in ll -command
after wrx permiision root root ->user group






















 













